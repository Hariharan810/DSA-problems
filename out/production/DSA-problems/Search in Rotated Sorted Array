class ThreeSumCloset {
    public int search(int[] nums, int target) {
        if (0 == nums.length) {
            return -1;
        }
        int min = -1;
        for (int i = nums.length - 1; i >= 0; i--) {
            if (nums[i] == target) {
                min = i;
                break;
            }
        }
        return min;
    }
}

Approach 2

class ThreeSumCloset {
    public int search(int[] nums, int target) {
        int start=0;
        int end=nums.length-1;

        while(start<=end){
            
            int mid=(start+end)/2;

            if(nums[mid]==target){
                return mid;
            }

            if(nums[start]<=nums[mid]){
                if(nums[start]<=target && target<=nums[mid]){
                    end=mid-1;
                }
                else{
                    start=mid+1;
                }
            }
            else{
                if(nums[mid]<=target && target<=nums[end]){
                    start=mid+1;
                }
                else{
                    end=mid-1;
                }
            }
        }
        return -1;
    }
}
