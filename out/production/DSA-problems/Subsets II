class ThreeSumCloset {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> tempList=new ArrayList<>();
        Arrays.sort(nums);
        
        backtracking(result, tempList, nums, 0);
        return result;
    }

    private void backtracking(List<List<Integer>> result,
    List<Integer> tempList, int[] nums, int start) {

        if(start==nums.length){
            result.add(new ArrayList<>(tempList));
            return ;
        }

        result.add(new ArrayList<>(tempList));

        for (int i = start; i < nums.length; i++) {
            if(i>start && nums[i]==nums[i-1]) continue;
            tempList.add(nums[i]);
            backtracking(result, tempList, nums, i + 1);
            tempList.remove(tempList.size() - 1);
        }
    }
}
